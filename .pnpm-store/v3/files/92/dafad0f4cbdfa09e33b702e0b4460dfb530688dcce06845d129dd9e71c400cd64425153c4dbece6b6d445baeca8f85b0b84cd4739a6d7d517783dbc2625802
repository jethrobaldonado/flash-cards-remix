import type { WorkerLoadContext } from '@remix-pwa/dev/worker-build.js';
/**
 * Clones an object
 */
export declare function clone<T extends Record<string | number | symbol, unknown> | Request>(_object: T): T;
/**
 * Gets the URL search parameters from a request.
 */
export declare function getURLParameters(request: Request, path?: string): Record<string, string | undefined>;
/**
 * Removes the all the index parameters from a request unless they are not empty.
 */
export declare function stripIndexParameter(request: Request): Request;
/**
 * Removes the data parameter from a request.
 */
export declare function stripDataParameter(request: Request): Request;
/**
 * Creates arguments for the Worker Actions and Loaders.
 */
export declare function createArgumentsFrom({ event, loadContext, path, }: {
    event: FetchEvent;
    loadContext: WorkerLoadContext;
    path?: string;
}): {
    request: Request;
    params: Record<string, string | undefined>;
    context: WorkerLoadContext;
};
/**
 * Checks if given request is a loader (`GET`) method.
 */
export declare function isLoaderMethod(request: Request): boolean;
/**
 * Checks if given request is a action (non-`GET`) method.
 */
export declare function isActionMethod(request: Request): boolean;
/**
 * Checks if given request is a action request.
 */
export declare function isActionRequest(request: Request, spaMode?: boolean): string | boolean | null;
/**
 * Checks if given request is a loader request.
 */
export declare function isLoaderRequest(request: Request, spaMode?: boolean): string | boolean | null;
